### YamlMime:ManagedReference
items:
- uid: UnderAutomation.UniversalRobots.CommandResponse`1
  commentId: T:UnderAutomation.UniversalRobots.CommandResponse`1
  id: CommandResponse`1
  parent: UnderAutomation.UniversalRobots
  children:
  - UnderAutomation.UniversalRobots.CommandResponse`1.#ctor(UnderAutomation.UniversalRobots.CommandResponse)
  - UnderAutomation.UniversalRobots.CommandResponse`1.ToString
  - UnderAutomation.UniversalRobots.CommandResponse`1.Value
  langs:
  - csharp
  - vb
  name: CommandResponse<T>
  nameWithType: CommandResponse<T>
  fullName: UnderAutomation.UniversalRobots.CommandResponse<T>
  type: Class
  source:
    id: CommandResponse
    path: D:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobots\DashboardCommands\CommandResponse.vb
    startLine: 5
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nAnswer return by a command which contains a value\n"
  example: []
  syntax:
    content: 'public class CommandResponse<T> : CommandResponse'
    typeParameters:
    - id: T
      description: ''
    content.vb: >-
      Public Class CommandResponse(Of T)
          Inherits CommandResponse
  inheritance:
  - System.Object
  - UnderAutomation.UniversalRobots.CommandResponse
  inheritedMembers:
  - UnderAutomation.UniversalRobots.CommandResponse.Succeed
  - UnderAutomation.UniversalRobots.CommandResponse.Message
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.Finalize
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: CommandResponse(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: UnderAutomation.UniversalRobots.CommandResponse(Of T)
  name.vb: CommandResponse(Of T)
- uid: UnderAutomation.UniversalRobots.CommandResponse`1.#ctor(UnderAutomation.UniversalRobots.CommandResponse)
  commentId: M:UnderAutomation.UniversalRobots.CommandResponse`1.#ctor(UnderAutomation.UniversalRobots.CommandResponse)
  id: '#ctor(UnderAutomation.UniversalRobots.CommandResponse)'
  parent: UnderAutomation.UniversalRobots.CommandResponse`1
  langs:
  - csharp
  - vb
  name: CommandResponse(CommandResponse)
  nameWithType: CommandResponse<T>.CommandResponse(CommandResponse)
  fullName: UnderAutomation.UniversalRobots.CommandResponse<T>.CommandResponse(UnderAutomation.UniversalRobots.CommandResponse)
  type: Constructor
  source:
    id: .ctor
    path: D:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobots\DashboardCommands\CommandResponse.vb
    startLine: 8
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  syntax:
    content: public CommandResponse(CommandResponse command)
    parameters:
    - id: command
      type: UnderAutomation.UniversalRobots.CommandResponse
    content.vb: Public Sub New(command As CommandResponse)
  overload: UnderAutomation.UniversalRobots.CommandResponse`1.#ctor*
  nameWithType.vb: CommandResponse(Of T).CommandResponse(CommandResponse)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: UnderAutomation.UniversalRobots.CommandResponse(Of T).CommandResponse(UnderAutomation.UniversalRobots.CommandResponse)
- uid: UnderAutomation.UniversalRobots.CommandResponse`1.Value
  commentId: F:UnderAutomation.UniversalRobots.CommandResponse`1.Value
  id: Value
  parent: UnderAutomation.UniversalRobots.CommandResponse`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: CommandResponse<T>.Value
  fullName: UnderAutomation.UniversalRobots.CommandResponse<T>.Value
  type: Field
  source:
    id: Value
    path: D:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobots\DashboardCommands\CommandResponse.vb
    startLine: 16
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nValue return by the command\n"
  example: []
  syntax:
    content: public T Value
    return:
      type: '{T}'
    content.vb: Public Value As T
  nameWithType.vb: CommandResponse(Of T).Value
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: UnderAutomation.UniversalRobots.CommandResponse(Of T).Value
- uid: UnderAutomation.UniversalRobots.CommandResponse`1.ToString
  commentId: M:UnderAutomation.UniversalRobots.CommandResponse`1.ToString
  id: ToString
  parent: UnderAutomation.UniversalRobots.CommandResponse`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CommandResponse<T>.ToString()
  fullName: UnderAutomation.UniversalRobots.CommandResponse<T>.ToString()
  type: Method
  source:
    id: ToString
    path: D:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobots\DashboardCommands\CommandResponse.vb
    startLine: 21
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nA human readable answer\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: UnderAutomation.UniversalRobots.CommandResponse.ToString
  overload: UnderAutomation.UniversalRobots.CommandResponse`1.ToString*
  nameWithType.vb: CommandResponse(Of T).ToString()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: UnderAutomation.UniversalRobots.CommandResponse(Of T).ToString()
references:
- uid: UnderAutomation.UniversalRobots
  commentId: N:UnderAutomation.UniversalRobots
  name: UnderAutomation.UniversalRobots
  nameWithType: UnderAutomation.UniversalRobots
  fullName: UnderAutomation.UniversalRobots
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: UnderAutomation.UniversalRobots.CommandResponse
  commentId: T:UnderAutomation.UniversalRobots.CommandResponse
  parent: UnderAutomation.UniversalRobots
  name: CommandResponse
  nameWithType: CommandResponse
  fullName: UnderAutomation.UniversalRobots.CommandResponse
- uid: UnderAutomation.UniversalRobots.CommandResponse.Succeed
  commentId: F:UnderAutomation.UniversalRobots.CommandResponse.Succeed
  parent: UnderAutomation.UniversalRobots.CommandResponse
  name: Succeed
  nameWithType: CommandResponse.Succeed
  fullName: UnderAutomation.UniversalRobots.CommandResponse.Succeed
- uid: UnderAutomation.UniversalRobots.CommandResponse.Message
  commentId: F:UnderAutomation.UniversalRobots.CommandResponse.Message
  parent: UnderAutomation.UniversalRobots.CommandResponse
  name: Message
  nameWithType: CommandResponse.Message
  fullName: UnderAutomation.UniversalRobots.CommandResponse.Message
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnderAutomation.UniversalRobots.CommandResponse`1.#ctor*
  commentId: Overload:UnderAutomation.UniversalRobots.CommandResponse`1.#ctor
  name: CommandResponse
  nameWithType: CommandResponse<T>.CommandResponse
  fullName: UnderAutomation.UniversalRobots.CommandResponse<T>.CommandResponse
  nameWithType.vb: CommandResponse(Of T).CommandResponse
  fullName.vb: UnderAutomation.UniversalRobots.CommandResponse(Of T).CommandResponse
- uid: '{T}'
  commentId: '!:`0'
  definition: '`0'
  name: T
  nameWithType: T
  fullName: T
- uid: '`0'
  commentId: '!:`0'
  name: T
  nameWithType: T
  fullName: T
- uid: UnderAutomation.UniversalRobots.CommandResponse.ToString
  commentId: M:UnderAutomation.UniversalRobots.CommandResponse.ToString
  parent: UnderAutomation.UniversalRobots.CommandResponse
  name: ToString()
  nameWithType: CommandResponse.ToString()
  fullName: UnderAutomation.UniversalRobots.CommandResponse.ToString()
  spec.csharp:
  - uid: UnderAutomation.UniversalRobots.CommandResponse.ToString
    name: ToString
    nameWithType: CommandResponse.ToString
    fullName: UnderAutomation.UniversalRobots.CommandResponse.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: UnderAutomation.UniversalRobots.CommandResponse.ToString
    name: ToString
    nameWithType: CommandResponse.ToString
    fullName: UnderAutomation.UniversalRobots.CommandResponse.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnderAutomation.UniversalRobots.CommandResponse`1.ToString*
  commentId: Overload:UnderAutomation.UniversalRobots.CommandResponse`1.ToString
  name: ToString
  nameWithType: CommandResponse<T>.ToString
  fullName: UnderAutomation.UniversalRobots.CommandResponse<T>.ToString
  nameWithType.vb: CommandResponse(Of T).ToString
  fullName.vb: UnderAutomation.UniversalRobots.CommandResponse(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
