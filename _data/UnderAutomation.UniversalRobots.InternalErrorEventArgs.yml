### YamlMime:ManagedReference
items:
- uid: UnderAutomation.UniversalRobots.InternalErrorEventArgs
  commentId: T:UnderAutomation.UniversalRobots.InternalErrorEventArgs
  id: InternalErrorEventArgs
  parent: UnderAutomation.UniversalRobots
  children:
  - UnderAutomation.UniversalRobots.InternalErrorEventArgs.Exception
  - UnderAutomation.UniversalRobots.InternalErrorEventArgs.Message
  - UnderAutomation.UniversalRobots.InternalErrorEventArgs.Status
  - UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString
  langs:
  - csharp
  - vb
  name: InternalErrorEventArgs
  nameWithType: InternalErrorEventArgs
  fullName: UnderAutomation.UniversalRobots.InternalErrorEventArgs
  type: Class
  source:
    id: InternalErrorEventArgs
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 454
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nDescribes an internal error\n"
  example: []
  syntax:
    content: 'public class InternalErrorEventArgs : EventArgs'
    content.vb: >-
      Public Class InternalErrorEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.Finalize
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: UnderAutomation.UniversalRobots.InternalErrorEventArgs.Exception
  commentId: F:UnderAutomation.UniversalRobots.InternalErrorEventArgs.Exception
  id: Exception
  parent: UnderAutomation.UniversalRobots.InternalErrorEventArgs
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: InternalErrorEventArgs.Exception
  fullName: UnderAutomation.UniversalRobots.InternalErrorEventArgs.Exception
  type: Field
  source:
    id: Exception
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 460
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nThe exception thrown that causes an internal error\n"
  example: []
  syntax:
    content: public readonly Exception Exception
    return:
      type: System.Exception
    content.vb: Public ReadOnly Exception As Exception
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: UnderAutomation.UniversalRobots.InternalErrorEventArgs.Message
  commentId: F:UnderAutomation.UniversalRobots.InternalErrorEventArgs.Message
  id: Message
  parent: UnderAutomation.UniversalRobots.InternalErrorEventArgs
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: InternalErrorEventArgs.Message
  fullName: UnderAutomation.UniversalRobots.InternalErrorEventArgs.Message
  type: Field
  source:
    id: Message
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 465
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nExplicit message that explains what happened\n"
  example: []
  syntax:
    content: public readonly string Message
    return:
      type: System.String
    content.vb: Public ReadOnly Message As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: UnderAutomation.UniversalRobots.InternalErrorEventArgs.Status
  commentId: F:UnderAutomation.UniversalRobots.InternalErrorEventArgs.Status
  id: Status
  parent: UnderAutomation.UniversalRobots.InternalErrorEventArgs
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: InternalErrorEventArgs.Status
  fullName: UnderAutomation.UniversalRobots.InternalErrorEventArgs.Status
  type: Field
  source:
    id: Status
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 470
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nContext status associated to this internal error\n"
  example: []
  syntax:
    content: public readonly StatusCode Status
    return:
      type: UnderAutomation.UniversalRobots.StatusCode
    content.vb: Public ReadOnly Status As StatusCode
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString
  commentId: M:UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString
  id: ToString
  parent: UnderAutomation.UniversalRobots.InternalErrorEventArgs
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: InternalErrorEventArgs.ToString()
  fullName: UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString()
  type: Method
  source:
    id: ToString
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 478
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: UnderAutomation.UniversalRobots
  commentId: N:UnderAutomation.UniversalRobots
  name: UnderAutomation.UniversalRobots
  nameWithType: UnderAutomation.UniversalRobots
  fullName: UnderAutomation.UniversalRobots
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: UnderAutomation.UniversalRobots.StatusCode
  commentId: T:UnderAutomation.UniversalRobots.StatusCode
  parent: UnderAutomation.UniversalRobots
  name: StatusCode
  nameWithType: StatusCode
  fullName: UnderAutomation.UniversalRobots.StatusCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString*
  commentId: Overload:UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString
  name: ToString
  nameWithType: InternalErrorEventArgs.ToString
  fullName: UnderAutomation.UniversalRobots.InternalErrorEventArgs.ToString
