### YamlMime:ManagedReference
items:
- uid: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs
  commentId: T:UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs
  id: AdditionalInfoPackageEventArgs
  parent: UnderAutomation.UniversalRobots
  children:
  - UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
  - UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed
  - UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive
  langs:
  - csharp
  - vb
  name: AdditionalInfoPackageEventArgs
  nameWithType: AdditionalInfoPackageEventArgs
  fullName: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs
  type: Class
  source:
    id: AdditionalInfoPackageEventArgs
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 1887
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nAdditional information\n"
  example: []
  syntax:
    content: 'public class AdditionalInfoPackageEventArgs : PackageEventArgs'
    content.vb: >-
      Public Class AdditionalInfoPackageEventArgs
          Inherits PackageEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - UnderAutomation.UniversalRobots.PackageEventArgs
  inheritedMembers:
  - UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.Finalize
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed
  commentId: P:UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed
  id: FreedriveButtonPressed
  parent: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: FreedriveButtonPressed
  nameWithType: AdditionalInfoPackageEventArgs.FreedriveButtonPressed
  fullName: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed
  type: Property
  source:
    id: FreedriveButtonPressed
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 1894
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nThe free drive button is pressed\n"
  example: []
  syntax:
    content: public bool FreedriveButtonPressed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FreedriveButtonPressed As Boolean
  overload: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
  commentId: P:UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
  id: FreedriveButtonEnabled
  parent: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: FreedriveButtonEnabled
  nameWithType: AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
  fullName: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
  type: Property
  source:
    id: FreedriveButtonEnabled
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 1899
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nThe free drive button is enabled\n"
  example: []
  syntax:
    content: public bool FreedriveButtonEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property FreedriveButtonEnabled As Boolean
  overload: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive
  commentId: P:UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive
  id: IOEnabledFreedrive
  parent: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: IOEnabledFreedrive
  nameWithType: AdditionalInfoPackageEventArgs.IOEnabledFreedrive
  fullName: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive
  type: Property
  source:
    id: IOEnabledFreedrive
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 1904
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nFree drive is enable via IO\n"
  example: []
  syntax:
    content: public bool IOEnabledFreedrive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IOEnabledFreedrive As Boolean
  overload: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: UnderAutomation.UniversalRobots
  commentId: N:UnderAutomation.UniversalRobots
  name: UnderAutomation.UniversalRobots
  nameWithType: UnderAutomation.UniversalRobots
  fullName: UnderAutomation.UniversalRobots
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: UnderAutomation.UniversalRobots.PackageEventArgs
  commentId: T:UnderAutomation.UniversalRobots.PackageEventArgs
  parent: UnderAutomation.UniversalRobots
  name: PackageEventArgs
  nameWithType: PackageEventArgs
  fullName: UnderAutomation.UniversalRobots.PackageEventArgs
- uid: UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
  commentId: F:UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
  parent: UnderAutomation.UniversalRobots.PackageEventArgs
  name: ReceiveDate
  nameWithType: PackageEventArgs.ReceiveDate
  fullName: UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed*
  commentId: Overload:UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed
  name: FreedriveButtonPressed
  nameWithType: AdditionalInfoPackageEventArgs.FreedriveButtonPressed
  fullName: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonPressed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled*
  commentId: Overload:UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
  name: FreedriveButtonEnabled
  nameWithType: AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
  fullName: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.FreedriveButtonEnabled
- uid: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive*
  commentId: Overload:UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive
  name: IOEnabledFreedrive
  nameWithType: AdditionalInfoPackageEventArgs.IOEnabledFreedrive
  fullName: UnderAutomation.UniversalRobots.AdditionalInfoPackageEventArgs.IOEnabledFreedrive
