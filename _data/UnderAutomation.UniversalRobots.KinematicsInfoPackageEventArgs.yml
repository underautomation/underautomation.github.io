### YamlMime:ManagedReference
items:
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  commentId: T:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  id: KinematicsInfoPackageEventArgs
  parent: UnderAutomation.UniversalRobots
  children:
  - UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base
  - UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus
  - UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow
  - UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder
  - UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1
  - UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2
  - UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3
  langs:
  - csharp
  - vb
  name: KinematicsInfoPackageEventArgs
  nameWithType: KinematicsInfoPackageEventArgs
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  type: Class
  source:
    id: KinematicsInfoPackageEventArgs
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2244
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nKinematics info\n"
  example: []
  syntax:
    content: 'public class KinematicsInfoPackageEventArgs : PackageEventArgs'
    content.vb: >-
      Public Class KinematicsInfoPackageEventArgs
          Inherits PackageEventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  - UnderAutomation.UniversalRobots.PackageEventArgs
  inheritedMembers:
  - UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.Finalize
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus
  commentId: P:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus
  id: CalibrationStatus
  parent: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: CalibrationStatus
  nameWithType: KinematicsInfoPackageEventArgs.CalibrationStatus
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus
  type: Property
  source:
    id: CalibrationStatus
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2251
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nCalibration status (0 : OK)\n"
  example: []
  syntax:
    content: public int CalibrationStatus { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CalibrationStatus As Integer
  overload: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base
  commentId: P:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base
  id: Base
  parent: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: KinematicsInfoPackageEventArgs.Base
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base
  type: Property
  source:
    id: Base
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2256
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nBase kinematics info\n"
  example: []
  syntax:
    content: public JointKinematicsInfo Base { get; set; }
    parameters: []
    return:
      type: UnderAutomation.UniversalRobots.JointKinematicsInfo
    content.vb: Public Property Base As JointKinematicsInfo
  overload: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder
  commentId: P:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder
  id: Shoulder
  parent: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: Shoulder
  nameWithType: KinematicsInfoPackageEventArgs.Shoulder
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder
  type: Property
  source:
    id: Shoulder
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2261
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nShoulder kinematics info\n"
  example: []
  syntax:
    content: public JointKinematicsInfo Shoulder { get; set; }
    parameters: []
    return:
      type: UnderAutomation.UniversalRobots.JointKinematicsInfo
    content.vb: Public Property Shoulder As JointKinematicsInfo
  overload: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow
  commentId: P:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow
  id: Elbow
  parent: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: Elbow
  nameWithType: KinematicsInfoPackageEventArgs.Elbow
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow
  type: Property
  source:
    id: Elbow
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2266
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nElbow kinematics info\n"
  example: []
  syntax:
    content: public JointKinematicsInfo Elbow { get; set; }
    parameters: []
    return:
      type: UnderAutomation.UniversalRobots.JointKinematicsInfo
    content.vb: Public Property Elbow As JointKinematicsInfo
  overload: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1
  commentId: P:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1
  id: Wrist1
  parent: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: Wrist1
  nameWithType: KinematicsInfoPackageEventArgs.Wrist1
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1
  type: Property
  source:
    id: Wrist1
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2271
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nWrist1 kinematics info\n"
  example: []
  syntax:
    content: public JointKinematicsInfo Wrist1 { get; set; }
    parameters: []
    return:
      type: UnderAutomation.UniversalRobots.JointKinematicsInfo
    content.vb: Public Property Wrist1 As JointKinematicsInfo
  overload: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2
  commentId: P:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2
  id: Wrist2
  parent: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: Wrist2
  nameWithType: KinematicsInfoPackageEventArgs.Wrist2
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2
  type: Property
  source:
    id: Wrist2
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2276
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nWrist2 kinematics info\n"
  example: []
  syntax:
    content: public JointKinematicsInfo Wrist2 { get; set; }
    parameters: []
    return:
      type: UnderAutomation.UniversalRobots.JointKinematicsInfo
    content.vb: Public Property Wrist2 As JointKinematicsInfo
  overload: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3
  commentId: P:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3
  id: Wrist3
  parent: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs
  langs:
  - csharp
  - vb
  name: Wrist3
  nameWithType: KinematicsInfoPackageEventArgs.Wrist3
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3
  type: Property
  source:
    id: Wrist3
    path: d:\a\UnderAutomationDev\UnderAutomationDev\UniversalRobot\UR.vb
    startLine: 2281
  assemblies:
  - UnderAutomation.UniversalRobots
  namespace: UnderAutomation.UniversalRobots
  summary: "\nWrist3 (Tool) kinematics info\n"
  example: []
  syntax:
    content: public JointKinematicsInfo Wrist3 { get; set; }
    parameters: []
    return:
      type: UnderAutomation.UniversalRobots.JointKinematicsInfo
    content.vb: Public Property Wrist3 As JointKinematicsInfo
  overload: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: UnderAutomation.UniversalRobots
  commentId: N:UnderAutomation.UniversalRobots
  name: UnderAutomation.UniversalRobots
  nameWithType: UnderAutomation.UniversalRobots
  fullName: UnderAutomation.UniversalRobots
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: UnderAutomation.UniversalRobots.PackageEventArgs
  commentId: T:UnderAutomation.UniversalRobots.PackageEventArgs
  parent: UnderAutomation.UniversalRobots
  name: PackageEventArgs
  nameWithType: PackageEventArgs
  fullName: UnderAutomation.UniversalRobots.PackageEventArgs
- uid: UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
  commentId: F:UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
  parent: UnderAutomation.UniversalRobots.PackageEventArgs
  name: ReceiveDate
  nameWithType: PackageEventArgs.ReceiveDate
  fullName: UnderAutomation.UniversalRobots.PackageEventArgs.ReceiveDate
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Finalize
  commentId: M:System.Object.Finalize
  parent: System.Object
  isExternal: true
  name: Finalize()
  nameWithType: Object.Finalize()
  fullName: System.Object.Finalize()
  spec.csharp:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Finalize
    name: Finalize
    nameWithType: Object.Finalize
    fullName: System.Object.Finalize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus*
  commentId: Overload:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus
  name: CalibrationStatus
  nameWithType: KinematicsInfoPackageEventArgs.CalibrationStatus
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.CalibrationStatus
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base*
  commentId: Overload:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base
  name: Base
  nameWithType: KinematicsInfoPackageEventArgs.Base
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Base
- uid: UnderAutomation.UniversalRobots.JointKinematicsInfo
  commentId: T:UnderAutomation.UniversalRobots.JointKinematicsInfo
  parent: UnderAutomation.UniversalRobots
  name: JointKinematicsInfo
  nameWithType: JointKinematicsInfo
  fullName: UnderAutomation.UniversalRobots.JointKinematicsInfo
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder*
  commentId: Overload:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder
  name: Shoulder
  nameWithType: KinematicsInfoPackageEventArgs.Shoulder
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Shoulder
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow*
  commentId: Overload:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow
  name: Elbow
  nameWithType: KinematicsInfoPackageEventArgs.Elbow
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Elbow
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1*
  commentId: Overload:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1
  name: Wrist1
  nameWithType: KinematicsInfoPackageEventArgs.Wrist1
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist1
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2*
  commentId: Overload:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2
  name: Wrist2
  nameWithType: KinematicsInfoPackageEventArgs.Wrist2
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist2
- uid: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3*
  commentId: Overload:UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3
  name: Wrist3
  nameWithType: KinematicsInfoPackageEventArgs.Wrist3
  fullName: UnderAutomation.UniversalRobots.KinematicsInfoPackageEventArgs.Wrist3
